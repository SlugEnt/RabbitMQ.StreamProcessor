# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: BuildTest

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


env:
  COVERAGE_PATH: /home/runner/work/RabbitMQ.StreamProcessor/RabbitMQ.StreamProcessor/src/Test_StreamProcessorLibrary
  

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
    - uses: actions/checkout@v3

    - name: Set Test Project
      run: |
        echo "COVERAGE_PATH=${{ env.COVERAGE_PATH }}"
        echo "COVERAGE_FILE=${{ env.COVERAGE_PATH }}/coverage.opencover.xml" >> $GITHUB_ENV
        echo "COVERAGE_RPT=${{ env.COVERAGE_PATH" }}/report"  >> $GITHUB_ENV

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x


    - name: Restore dependencies
      run: dotnet restore


    - name: Build
      run: dotnet build --no-restore --configuration Release

      
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release /property:CollectCoverage=True /property:CoverletOutputFormat=opencover
     

    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.1.17
      env:
        
      with: 
        reports: '${{ env.COVERAGE_FILE }}'
        targetdir: '${{ env.COVERAGE_RPT }}'
        reporttypes: 'Html;MarkdownSummary'
        sourcedirs: ''
        historydir: ''
        plugins: ''
        assemblyfilters: '-nunit*;-Dapper;'
        classfilters: '+*'
        filefilters: '-Program.cs;-*.cshtml'
        verbosity: 'Verbose'

#        title: ${{ env.CODE_COVERAGE_REPORT_NAME }}
        tag: '${{ github.workflow}}_${{ github.run_id }}'
        customSettings: ''
        toolpath: 'reportgeneratortool'


    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2    
      with:
        name: Coverage Report
        path: ${{ env.COVERAGE_RPT }}


    - name: External repo/wiki sync action
      env: 
        GH_ACCESS_TOKEN: ${{ secrets.WIKI_ACCESS_TOKEN }}
      uses: kai-tub/external-repo-sync-action@v1
      with:  
        source-directory: '${{ env.COVERAGE_RPT }}/'
        include-patterns: "*.md"

    - name: Setup tmate session
      if: success() || failure()
      uses: mxschmitt/action-tmate@v3


# From https://github.com/im-open/code-coverage-report-generator